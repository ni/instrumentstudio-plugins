<ResourceDictionary x:Class="SwitchExecutive.Plugin.Internal.Controls.InstrumentPanelResources"
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:system="clr-namespace:System;assembly=mscorlib"
   xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
   xmlns:ni="http://schemas.ni.com/controls/2009/xaml/presentation"
   xmlns:niPrimitives="http://schemas.ni.com/controls/2009/xaml/presentation/primitives"
   xmlns:core="clr-namespace:NationalInstruments.Core;assembly=NationalInstruments.Core"
   xmlns:coreControls="clr-namespace:NationalInstruments.Controls;assembly=NationalInstruments.Core"
   xmlns:controlsConverters="clr-namespace:NationalInstruments.Controls.Converters;assembly=NationalInstruments.Controls"
   xmlns:shell="clr-namespace:NationalInstruments.Shell;assembly=NationalInstruments.PlatformFramework"
   xmlns:local="clr-namespace:SwitchExecutive.Plugin.Internal"
   xmlns:localControls="clr-namespace:SwitchExecutive.Plugin.Internal.Controls"
   xmlns:shellControls="clr-namespace:NationalInstruments.Controls.Shell;assembly=NationalInstruments.PlatformFramework">
   <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/NationalInstruments.Controls.SkinProviders.Graphs;component/SystemSkins/Graph.System.WPF.xaml"/>
        <ResourceDictionary Source="/NationalInstruments.Controls.SkinProviders.Numerics;component/IDESkins/NumericTextBoxDouble.IDE.WPF.xaml"/>
        <ResourceDictionary Source="/NationalInstruments.Controls.SkinProviders.Numerics;component/IDESkins/NumericTextBoxInt32.IDE.WPF.xaml"/>
        <ResourceDictionary Source="/NationalInstruments.Controls.SkinProviders.Numerics;component/IDESkins/NumericTextBoxInt64.IDE.WPF.xaml"/>
        <ResourceDictionary Source="/NationalInstruments.Controls.SkinProviders.Numerics;component/IDESkins/SliderDouble.IDE.WPF.xaml"/>
        <ResourceDictionary Source="/NationalInstruments.Core;component/Themes/Colors.xaml"/>
        <ResourceDictionary Source="/NationalInstruments.Core;component/Themes/TextAndFonts.xaml"/>
        <ResourceDictionary Source="/NationalInstruments.PlatformFramework;component/Themes/TextAndFonts.xaml"/>
        <ResourceDictionary Source="/NationalInstruments.PlatformFramework;component/Themes/Common.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--#region Constants-->

    <Duration x:Key="GlobalShortTransitionDuration">0:0:0.1</Duration>
    <system:Double x:Key="DefaultRowLeftMargin">24</system:Double>
    <system:Double x:Key="DefaultRowTopMargin">8</system:Double>
    <system:Double x:Key="DefaultRowRightMargin">24</system:Double>
    <system:Double x:Key="DefaultRowBottomMargin">5</system:Double>
    <system:Double x:Key="DefaultLastRowBottomMargin">8</system:Double>
    <system:Double x:Key="WideMarginOrPadding">16</system:Double>
    <system:Double x:Key="MediumMarginOrPadding">8</system:Double>
    <system:Double x:Key="NarrowMarginOrPadding">4</system:Double>
    <system:Double x:Key="ControlHeight">24</system:Double>
    <system:Double x:Key="DefaultControlWidth">88</system:Double>
    <GridLength x:Key="OuterColumnWidth">96</GridLength>
    <!-- 88 px control + 8 px L or R margin -->
    <GridLength x:Key="CentralColumnWidth">104</GridLength>
    <!-- 88 px control + 8 px L margin + 8 px R margin -->
    <system:Double x:Key="DialogButtonHeight">24</system:Double>
    <system:Double x:Key="DialogButtonWidth">70</system:Double>
    <system:Double x:Key="DisplaySectionHeaderHeight">30</system:Double>
    <system:Double x:Key="DisplayContainerSplitterHeight">5</system:Double>
    <system:Double x:Key="SettingsPanelWidth">344</system:Double>
    <GridLength x:Key="StatisticsSectionDefaultHeight">150</GridLength>
    <GridLength x:Key="TierTwoRowHeight">32</GridLength>
    <system:Double x:Key="TierTwoRowMaxHeight">32</system:Double>
    <system:Double x:Key="TierTwoControlWidth">146</system:Double>
    <system:Double x:Key="TierTwoPopupControlWidth">105</system:Double>
    <GridLength x:Key="AutoGridLength">Auto</GridLength>
    <system:Double x:Key="ProcessDialogInProgressImageSize">64</system:Double>
    <Geometry x:Key="HandleInteriorAreaPath">M2 10.89648l8 4.73218 8-4.73218V4a2.00229 2.00229 0 0 0-2-2H4A2.00229 2.00229 0 0 0 2 4Z</Geometry>
    <Geometry x:Key="HandleInnerBorderPath">M16 2a2.00229 2.00229 0 0 1 2 2v6.89648l-8 4.73218L2 10.89648V4A2.00229 2.00229 0 0 1 4 2H16m0-1H4A2.99984 2.99984 0 0 0 1 4v7.4668l9 5.32373 9-5.32373V4a3 3 0 0 0-3-3Z</Geometry>
    <Geometry x:Key="HandleOuterBorderPath">M16 0H4A4.00458 4.00458 0 0 0 0 4v8.03711l.491.29053 9 5.32373.509.301.509-.301 9-5.32373L20 12.03711V4A4.00458 4.00458 0 0 0 16 0Zm3 11.4668-9 5.32373L1 11.4668V4A2.99984 2.99984 0 0 1 4 1H16a3 3 0 0 1 3 3Z</Geometry>
    <system:Double x:Key="HandleHeight">19</system:Double>
    <system:Double x:Key="InverseHandleHeight">-19</system:Double>
    <system:Double x:Key="HandleWidth">21</system:Double>
    <DoubleCollection x:Key="CursorOneDashArray">10 5</DoubleCollection>
    <DoubleCollection x:Key="CursorTwoDashArray">4 4</DoubleCollection>
    <system:Double x:Key="TierTwoScrollBarMarginWithLeftPane">24</system:Double>
    <system:Double x:Key="TierTwoScrollBarMarginWithoutLeftPane">20</system:Double>
    <Thickness x:Key="NumericControlPadding">8 2 2 2</Thickness>
    <Thickness x:Key="ComboBoxPadding">10 3 2 2</Thickness>
    <!-- Top padding pushes text down 1 px to align with text in numeric controls. -->
    <Thickness x:Key="SettingsPanelComboBoxPadding">2 3 2 2</Thickness>
    <!-- Top padding pushes text down 1 px to align with text in numeric controls. -->
    <Thickness x:Key="SettingsPanelControlLeftMargin" Left="{StaticResource MediumMarginOrPadding}"/>
    <Thickness x:Key="SettingsPanelControlRightMargin" Right="{StaticResource MediumMarginOrPadding}"/>
    <Thickness x:Key="SettingsPanelControlLeftAndRightMargins" Left="{StaticResource MediumMarginOrPadding}" Right="{StaticResource MediumMarginOrPadding}"/>
    <Thickness x:Key="SettingsPanelControlLeftMarginNarrow" Left="{StaticResource NarrowMarginOrPadding}"/>
    <Thickness x:Key="SettingsPanelControlRightMarginNarrow" Right="{StaticResource NarrowMarginOrPadding}"/>
    <Thickness x:Key="SettingsPanelControlLeftAndRightMarginsNarrow" Left="{StaticResource NarrowMarginOrPadding}" Right="{StaticResource NarrowMarginOrPadding}"/>
    <Thickness x:Key="TierTwoContentMarginWithLeftPane" Left="{StaticResource DefaultRowLeftMargin}" Top="15" Right="{StaticResource TierTwoScrollBarMarginWithLeftPane}" Bottom="15"/>
    <Thickness x:Key="TierTwoContentMarginWithoutLeftPane" Left="{StaticResource DefaultRowLeftMargin}" Top="15" Right="{StaticResource TierTwoScrollBarMarginWithoutLeftPane}" Bottom="15"/>
    <Thickness x:Key="DisplayAreaTopRowTextBlockPadding" Top="10"/>
    <Thickness x:Key="DisplayAreaBottomRowTextBlockPadding" Bottom="10"/>
    <!-- The -2 left and right padding is to offset an undesirable padding in the TextBoxView inside the TextBox that we don't have direct control over. -->
    <Thickness x:Key="DisplayAreaTopRowTextBoxPadding" Left="-2" Top="10" Right="-2" Bottom="0"/>
    <Thickness x:Key="DisplayAreaBottomRowTextBoxPadding" Left="-2" Top="0" Right="-2" Bottom="10"/>
    <!-- Provides enough height so that the offscreen handles won't collide with the regular handles. -->
    <GridLength x:Key="HandleRegionAboveGraphHeight">48</GridLength>
    <Thickness x:Key="ToolbarHeaderRightSideControlMargin" Right="15"/>
    <Thickness x:Key="ToolbarHeaderLeftSideControlMargin" Left="15"/>
    <Thickness x:Key="ToolbarHeaderRelatedToElementToTheLeftMargin" Left="5"/>
    <Thickness x:Key="ToolbarHeaderLeftOfToolbarComboBoxMargin" Left="7"/>
    <Thickness x:Key="DocumentBorderThickness" Top="8"/>
    <system:Double x:Key="MathAndFFTButtonWidth">48</system:Double>

    <!--Colors-->
    <!--Color Palette: https://nitalk.jiveon.com/docs/DOC-359403-->

    <Color x:Key="White">#FFFFFF</Color>
    <Color x:Key="Gray10">#FAFAFA</Color>
    <Color x:Key="Gray20">#F5F5F5</Color>
    <Color x:Key="Gray30">#E6E6E6</Color>
    <Color x:Key="Gray35">#B3B3B3</Color>
    <Color x:Key="Gray40">#676767</Color>
    <Color x:Key="Blue10">#C9D7E1</Color>
    <Color x:Key="Blue20">#4286BD</Color>
    <Color x:Key="Blue30">#3A77A0</Color>

    <!-- This is NIMediumGray, but there's not a good way to give a local alias to an existing Color-->
    <Color x:Key="IconGrayColor">#575757</Color>

    <Color x:Key="PlotAreaBackgroundColor">#262626</Color>

    <!--Plot Colors-->

    <Color x:Key="Plot1Color">#F0E442</Color>
    <Color x:Key="Plot2Color">#56B4E9</Color>
    <Color x:Key="Plot3Color">#ED0BF4</Color>
    <Color x:Key="Plot4Color">#009E73</Color>
    <Color x:Key="Plot5Color">#D55E00</Color>
    <Color x:Key="Plot6Color">#9BF78B</Color>
    <Color x:Key="Plot7Color">#E69F00</Color>
    <Color x:Key="Plot8Color">#CC79A7</Color>
    <Color x:Key="Plot9Color">#F40B21</Color>
    <Color x:Key="Plot10Color">#0088C1</Color>
    <Color x:Key="Plot11Color">#7C57CE</Color>
    <Color x:Key="Plot12Color">#F22779</Color>
    <Color x:Key="Plot13Color">#008092</Color>
    <Color x:Key="Plot14Color">#9B9600</Color>
    <Color x:Key="Plot15Color">#5FB3B3</Color>
    <Color x:Key="Plot16Color">#F99157</Color>

    <!--Brushes-->

    <SolidColorBrush x:Key="ControlLabelBrush" Color="{StaticResource NIBlack}"/>
    <!-- SolidColorBrush x:Key="HeaderAndBorderBrush" Color="{StaticResource Blue30}"/-->
    <SolidColorBrush x:Key="HeaderAndBorderBrush" Color="#bf5700"/>
    <SolidColorBrush x:Key="HeaderAndBorderGrayBrush" Color="{StaticResource NIIconGray}"/>
    <SolidColorBrush x:Key="HeaderTextBrush" Color="{StaticResource White}"/>
    <SolidColorBrush x:Key="InstrumentBackgroundBrush" Color="{StaticResource NIBackDropGray}"/>
    <SolidColorBrush x:Key="SectionHeaderTextBrush" Color="{StaticResource NIBlack}"/>
    <SolidColorBrush x:Key="SubheaderTextBrush" Color="{StaticResource NIMediumGray}"/>
    <SolidColorBrush x:Key="SettingsPanelBackgroundBrush" Color="{StaticResource NICoolWhite}"/>
    <SolidColorBrush x:Key="SettingsPanelDefaultRowBackgroundBrush" Color="{StaticResource NICoolWhite}"/>
    <SolidColorBrush x:Key="SettingsPanelBlockSeparatorBrush" Color="{StaticResource Gray35}"/>
    <SolidColorBrush x:Key="ControlBorderGrayBrush" Color="{StaticResource NIBackDropGray}"/>

    <SolidColorBrush x:Key="HeaderMenuBorder" Color="{StaticResource Blue10}"/>
    <SolidColorBrush x:Key="DisplaySectionHeaderBackgroundBrush" Color="{StaticResource Gray30}"/>

    <SolidColorBrush x:Key="GraphPlotAreaBackgroundBrush" Color="{StaticResource PlotAreaBackgroundColor}"/>
    <SolidColorBrush x:Key="GraphMarkerLabelBackgroundBrush" Color="{StaticResource PlotAreaBackgroundColor}" Opacity="0.5"/>
    <SolidColorBrush x:Key="GraphPlotAreaBorderBrush" Color="{StaticResource Gray40}"/>
    <SolidColorBrush x:Key="GraticuleStrokeBrush" Color="{StaticResource Gray40}"/>
    <SolidColorBrush x:Key="GraphAxesForegroundBrush" Color="{StaticResource Gray20}"/>
    <SolidColorBrush x:Key="GraphAxisLabelForegroundBrush" Color="#838383"/>
    <SolidColorBrush x:Key="GraphAreaBackgroundBrush" Color="#3C3C3C"/>

    <SolidColorBrush x:Key="IconGrayBrush" Color="{StaticResource IconGrayColor}"/>

    <SolidColorBrush x:Key="MarkerPeakButtonIconWaveformBrush" Color="{StaticResource IconGrayColor}"/>
    <SolidColorBrush x:Key="MarkerPeakButtonIconPointBrush" Color="{StaticResource IconGrayColor}" Opacity="0.5"/>

    <SolidColorBrush x:Key="TierTwoBackgroundBrush" Color="{StaticResource NIBackground}"/>
    <SolidColorBrush x:Key="TierTwoBorderBrush" Color="{StaticResource NIHighlight}"/>
    <SolidColorBrush x:Key="TierTwoContentBackgroundBrush" Color="{StaticResource NICoolWhite}"/>
    <SolidColorBrush x:Key="TierTwoListItemBackgroundBrush" Color="{StaticResource NICoolWhite}"/>

    <SolidColorBrush x:Key="DialogBackgroundBrush" Color="{StaticResource NIWhite}"/>
    <SolidColorBrush x:Key="DialogBlockBackgroundBrush" Color="{StaticResource NIBackground}"/>

    <SolidColorBrush x:Key="BigResultsBackgroundBrush" Color="{StaticResource NICoolWhite}"/>
    <SolidColorBrush x:Key="BigResultsSeparatorBrush" Color="#C7CCD0"/>

    <SolidColorBrush x:Key="ThumbnailOpaqueOverlayBrush" Color="#9E535353"/>
    <SolidColorBrush x:Key="ThumbnailViewportBrush" Color="#A9A9A9"/>

    <SolidColorBrush x:Key="ProcessDialogSuccessBackgroundBrush" Color="{StaticResource NIHighlight}"/>
    <SolidColorBrush x:Key="ProcessDialogDefaultBackgroundBrush" Color="{StaticResource NIDropDownGray}"/>

    <!-- Process dialog intentionally uses slightly darker colors than the standard red/green-->
    <SolidColorBrush x:Key="ProcessDialogErrorBackgroundBrush" Color="#AA1122"/>
    <SolidColorBrush x:Key="ProcessDialogWarningBackgroundBrush" Color="#BF5700"/>

    <SolidColorBrush x:Key="ErrorHatBorderBrush" Color="{StaticResource NIError}"/>
    <SolidColorBrush x:Key="DeviceWarningBrush" Color="{StaticResource NIWarning}"/>

    <SolidColorBrush x:Key="RunningBrush" Color="{StaticResource NISuccess}"/>
    <SolidColorBrush x:Key="StoppedBrush" Color="{StaticResource NIError}"/>

    <!--Instrument Picker Brushes-->

    <SolidColorBrush x:Key="BackgroundDisplayTextBrush" Color="#96A9B2"/>
    <SolidColorBrush x:Key="PickerContentOutlineBrush" Color="{StaticResource NIGray}"/>
    <SolidColorBrush x:Key="ChasissGroupHeaderBackgroundBrush" Color="{StaticResource NIGray}"/>
    <SolidColorBrush x:Key="PickerContentBackgroundBrush" Color="{StaticResource NICoolWhite}"/>
    <SolidColorBrush x:Key="PickerAssignedContentBackgroundBrush" Color="{StaticResource NIWhiteBlue}"/>
    <SolidColorBrush x:Key="PickerSlotNumberColumnBackgroundBrush" Color="{StaticResource NIGrayCool90}"/>

    <!--Graph Style Constants-->

    <Size x:Key="AxisTickSize" Height="0" Width="0"/>
    <ni:RangeDivisionsMode x:Key="YAxisMajorDivisionsMode">Count: 5</ni:RangeDivisionsMode>
    <ni:RangeDivisionsMode x:Key="YAxisMinorDivisionsMode">Count: 1</ni:RangeDivisionsMode>
    <ni:RangeDivisionsMode x:Key="XAxisMajorDivisionsMode">Count: 3</ni:RangeDivisionsMode>
    <ni:RangeDivisionsMode x:Key="XAxisMinorDivisionsMode">Count: 2</ni:RangeDivisionsMode>

    <!--#endregion-->

    <!--#region Common/Base Styles-->

    <Style TargetType="{x:Type Control}" x:Key="FontSetter">
        <Setter Property="FontFamily" Value="{DynamicResource IdeFontFamily}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource ControlLabelBrush}"/>
        <Setter Property="TextElement.Foreground" Value="{StaticResource ControlLabelBrush}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
    </Style>

    <Style TargetType="{x:Type ContentControl}" x:Key="ContentControlStyle">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <Style TargetType="Canvas" x:Key="IconCanvasStyle">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>
    </Style>

    <Style TargetType="Canvas" x:Key="IconCanvasInButtonStyle" BasedOn="{StaticResource IconCanvasStyle}">
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type shellControls:ShellButton}}}"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="Canvas" x:Key="IconCanvasInToggleButtonStyle" BasedOn="{StaticResource IconCanvasStyle}">
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type shellControls:ShellToggleButton}}}"/>
            </Style>
            <Style TargetType="Polygon">
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type shellControls:ShellToggleButton}}}"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="Canvas" x:Key="IconCanvasInToolbarButtonStyle" BasedOn="{StaticResource IconCanvasStyle}">
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type shell:ShellToolBarButton}}}"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="Canvas" x:Key="IconCanvasInControlTemplateStyle" BasedOn="{StaticResource IconCanvasStyle}">
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type shellControls:ShellButton}" x:Key="SettingsPanelButtonStyle" BasedOn="{StaticResource {x:Type shellControls:ShellButton}}">
        <Setter Property="Foreground" Value="{StaticResource ControlLabelBrush}"/>
        <Setter Property="Height" Value="{StaticResource ControlHeight}"/>
        <Setter Property="MinHeight" Value="{StaticResource ControlHeight}"/>
        <Setter Property="Padding" Value="0"/>
        <!-- The default ShellButton has a padding of "5 0" -->
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type shellControls:ShellToggleButton}" x:Key="SettingsPanelToggleButtonStyle" BasedOn="{StaticResource {x:Type shellControls:ShellToggleButton}}">
        <Setter Property="Foreground" Value="{StaticResource ControlLabelBrush}"/>
        <Setter Property="Height" Value="{StaticResource ControlHeight}"/>
        <Setter Property="MinHeight" Value="{StaticResource ControlHeight}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type shellControls:ShellButton}" x:Key="SquareButtonStyle" BasedOn="{StaticResource SettingsPanelButtonStyle}">
        <Setter Property="Width" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>
    </Style>

    <Style TargetType="{x:Type shell:ShellToolBarButton}" x:Key="ShellToolbarButtonStyle" BasedOn="{StaticResource {x:Type shell:ShellToolBarButton}}">
        <Setter Property="Height" Value="{StaticResource ControlHeight}"/>
        <Setter Property="MinHeight" Value="{StaticResource ControlHeight}"/>
        <Setter Property="FocusManager.IsFocusScope" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource ControlLabelBrush}"/>
    </Style>

    <Style TargetType="{x:Type shell:ShellToolBarButton}" x:Key="TitleBarButtonStyle" BasedOn="{StaticResource ShellToolbarButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource NITrueWhiteBrush}"/>
        <Setter Property="Padding" Value="7 1 7 0"/>
    </Style>

    <Style TargetType="{x:Type shell:ShellToolBarButton}" x:Key="SquareShellToolbarButtonStyle" BasedOn="{StaticResource ShellToolbarButtonStyle}">
        <Setter Property="Width" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>
        <!-- Square buttons are generally icon buttons, so default to using IconGrayBrush as the Foreground in this base style.-->
        <Setter Property="Foreground" Value="{StaticResource IconGrayBrush}"/>
    </Style>

    <Style TargetType="{x:Type shellControls:ShellToggleButton}" x:Key="BorderlessShellToggleButtonStyle" BasedOn="{StaticResource {x:Type shellControls:ShellToggleButton}}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="MinHeight" Value="{StaticResource ControlHeight}"/>
        <Setter Property="Foreground" Value="{StaticResource ControlLabelBrush}"/>
        <Setter Property="ni:CommonRenderProperties.ControlDesign" Value="{x:Static coreControls:ControlDesignConstants.ShellTransparentButtonControlDesign}"/>
        <Setter Property="coreControls:ColorTable.Palette" Value="{x:Static coreControls:ControlDesignConstants.DefaultRightRailColorTable}"/>
    </Style>

    <Style TargetType="{x:Type shellControls:ShellToggleButton}" x:Key="SquareBorderlessShellToggleButtonStyle" BasedOn="{StaticResource BorderlessShellToggleButtonStyle}">
        <Setter Property="Height" Value="{StaticResource ControlHeight}"/>
        <Setter Property="Width" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>
        <!-- Square buttons are generally icon buttons, so default to using IconGrayBrush as the Foreground in this base style.-->
        <Setter Property="Foreground" Value="{StaticResource IconGrayBrush}"/>
    </Style>

    <Style TargetType="Rectangle" x:Key="SeparatorBetweenButtonsStyle">
        <Setter Property="Height" Value="{StaticResource ControlHeight}"/>
        <Setter Property="Width" Value="1"/>
        <Setter Property="Fill" Value="{StaticResource BigResultsSeparatorBrush}"/>
    </Style>

    <Style TargetType="ScrollViewer" x:Key="SettingsPanelScrollbarStyle">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Style.Resources>
            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource {x:Type ScrollBar}}">
                <Setter Property="Margin" Value="-19 0 0 0"/>
            </Style>
        </Style.Resources>
    </Style>

    <!--Grid Splitter Styles-->

    <Style TargetType="{x:Type GridSplitter}" x:Key="GridSplitterStyle">
        <Setter Property="ResizeDirection" Value="Rows"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource NIGrayNeutral68Brush}"/>
    </Style>

    <Style TargetType="{x:Type GridSplitter}" x:Key="SmallPanelsSplitterStyle">
        <Setter Property="ResizeDirection" Value="Rows"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource InstrumentBackgroundBrush}"/>
        <Setter Property="Height" Value="{StaticResource MediumMarginOrPadding}"/>
    </Style>

    <!-- TODO: TextBlocks in PreferencesControls were previously using SettingsPanelControlLabelStyle, but we needed to change that style for
        the settings panel and we don't have a final spec for the Preferences window yet. -->
    <Style TargetType="{x:Type TextBlock}" x:Key="PreferencesWindowControlLabelStyle">
        <Setter Property="Foreground" Value="{StaticResource ControlLabelBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="17"/>
    </Style>

    <!--#endregion-->
    
    <!-- Header -->
    <Style TargetType="TextBlock" x:Key="HeaderPanelSfpNameStyle">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="{StaticResource HeaderAndBorderBrush}"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="Margin">
            <Setter.Value>
                <Thickness Left="{StaticResource DefaultRowLeftMargin}" Top="11"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsInstrumentActive}" Value="False">
                <Setter Property="Foreground" Value="{StaticResource HeaderAndBorderGrayBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Border" x:Key="SfpDocumentBorderStyle">
        <Setter Property="BorderBrush" Value="{StaticResource HeaderAndBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource DocumentBorderThickness}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsInstrumentActive}" Value="False">
                <Setter Property="BorderBrush" Value="{StaticResource HeaderAndBorderGrayBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="SettingsPanelSubheaderTextBlockStyle">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource SubheaderTextBrush}"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource Self}, Mode=OneWay}"/>
        <Setter Property="Margin">
            <Setter.Value>
                <Thickness
               Left="{StaticResource DefaultRowLeftMargin}"
               Top="-2"
               Right="{StaticResource DefaultRowRightMargin}"
               Bottom="3"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region Dialog Styles-->

    <Style TargetType="ItemsControl" x:Key="DialogBlockItemsPanel">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid Background="{StaticResource DialogBlockBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="ListItemTextBlockStyle">
        <Setter Property="Margin" Value="0 0 0 2"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="MaxWidth" Value="330"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource Self}, Mode=OneWay}"/>
    </Style>

    <!-- Controls For Tier 1 -->

    <Style TargetType="{x:Type shellControls:ShellComboBox}" BasedOn="{StaticResource {x:Type shellControls:ShellComboBox}}" x:Key="BaseComboBoxStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="MinHeight" Value="{StaticResource ControlHeight}"/>
        <Setter Property="Height" Value="{StaticResource ControlHeight}"/>
        <Setter Property="Padding" Value="{StaticResource ComboBoxPadding}"/>
        <Setter Property="Foreground" Value="{StaticResource ControlLabelBrush}"/>
        <Setter Property="ItemTemplateSelector" Value="{x:Null}"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="SettingsPanelControlLabelStyle">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource ControlLabelBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="17"/>
    </Style>

    <!-- Visualization -->
    
    <Style TargetType="{x:Type shellControls:ShellComboBox}" x:Key="DialogComboBoxStyle" BasedOn="{StaticResource BaseComboBoxStyle}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock x:Name="Content" Padding="{StaticResource ComboBoxPadding}" TextTrimming="CharacterEllipsis" Text="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type shell:ShellToolBarButton}" x:Key="ResetToolbarButtonStyle" BasedOn="{StaticResource SquareShellToolbarButtonStyle}" x:Shared="False">
        <Setter Property="Content">
            <Setter.Value>
                <Canvas Style="{StaticResource IconCanvasInToolbarButtonStyle}">
                    <Path Data="M 15.022,14.35 C 14.145,15.692 12.798,16.611 11.23,16.938 C 10.817,17.025 10.402,17.067 9.99,17.067 C 8.836,17.067 7.707,16.733 6.719,16.087 C 5.378,15.21 4.459,13.863 4.131,12.295 C 3.815,10.78 4.088,9.222 4.903,7.908 L 5.753,8.435 C 5.074,9.53 4.846,10.828 5.109,12.089 C 5.382,13.397 6.149,14.519 7.266,15.249 C 8.381,15.98 9.718,16.233 11.025,15.959 C 12.333,15.686 13.455,14.92 14.186,13.803 C 14.916,12.685 15.168,11.35 14.896,10.043 C 14.411,7.726 12.379,6.132 10.11,6.08 L 10.951,8.258 L 5.024,5.508 L 10.951,2.758 L 10.057,5.071 C 12.815,5.097 15.286,7.031 15.873,9.838 C 16.203,11.406 15.9,13.009 15.022,14.35 Z"/>
                </Canvas>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type shellControls:ShellToggleButton}" x:Key="ViewToggleButtonStyle" BasedOn="{StaticResource SquareBorderlessShellToggleButtonStyle}" x:Shared="False">
        <Setter Property="Content">
            <Setter.Value>
                <Canvas Style="{StaticResource IconCanvasInToggleButtonStyle}">
                    <Path Data="M 16.888,10.001 C 16.888,10.001 15.955,7.146 12.005,6.352 C 13.232,7.052 14.066,8.414 14.066,9.979 C 14.066,11.601 13.17,12.999 11.871,13.673 C 16.141,13.024 16.888,10.001 16.888,10.001 M 13.367,9.979 C 13.367,8.104 11.916,6.585 10.127,6.585 C 9.398,6.585 8.727,6.841 8.185,7.266 L 7.773,6.687 C 7.994,6.515 8.227,6.359 8.478,6.235 C 3.936,6.792 3.112,10.001 3.112,10.001 C 3.112,10.001 4.117,12.959 8.337,13.651 C 7.062,12.967 6.188,11.582 6.188,9.979 C 6.188,9.734 6.215,9.497 6.254,9.266 L 6.94,9.391 C 6.906,9.583 6.887,9.779 6.887,9.979 C 6.887,11.854 8.338,13.373 10.128,13.373 C 11.917,13.373 13.367,11.854 13.367,9.979 M 18,10.001 C 18,10.001 16.892,14.706 10.182,14.706 C 3.468,14.706 2,10.001 2,10.001 C 2,10.001 3.108,5.294 9.821,5.294 C 16.534,5.294 18,10.001 18,10.001 M 12.293,9.979 C 12.293,11.233 11.324,12.25 10.127,12.25 C 8.929,12.25 7.959,11.234 7.959,9.979 C 7.959,9.844 7.978,9.715 7.995,9.586 L 10.127,9.979 L 8.832,8.169 C 9.193,7.884 9.638,7.709 10.127,7.709 C 11.324,7.709 12.293,8.725 12.293,9.979"/>
                </Canvas>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type shell:ShellToolBarButton}" x:Key="DisplayToolbarButtonStyle" BasedOn="{StaticResource ShellToolbarButtonStyle}">
        <Setter Property="Margin" Value="8 0"/>
        <Setter Property="Padding" Value="7 0"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="ExpandCollapseTextStyle">
        <Setter Property="Foreground" Value="{StaticResource ControlLabelBrush}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Control used as the content for the expand/collapse buttons.
   Providing a Control style rather than a ShellToolBarButton style so that different instances can add its own trigger that rotates the control, binding to a context-specific property. -->
    <Style TargetType="Control" x:Key="ExpandCollapseControlInToolbarButtonStyle">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type shell:ShellToolBarButton}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Canvas Style="{StaticResource IconCanvasInControlTemplateStyle}">
                        <Path Data="M 4.8,4.333 L 10,11.267 L 15.2,4.333 L 16.8,5.533 L 10,14.6 L 3.2,5.534 L 4.8,4.333 Z"/>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style assumes a DataContext with a property called ResultsCollapsed. "Results" should be renamed at some point, since it refers to an old name of the Scope Measurements area. -->
    <Style TargetType="Control" x:Key="ExpandCollapseStatisticsControlStyle" BasedOn="{StaticResource ExpandCollapseControlInToolbarButtonStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ResultsCollapsed}" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="180"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="RenderTransformOrigin" Value="0.5 0.5"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>



    <Style TargetType="{x:Type localControls:DisplayContainerCollection}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="PART_Grid" UseLayoutRounding="False"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type localControls:DisplayContainer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type localControls:DisplayContainer}">
                    <DockPanel>
                        <!-- Header -->
                        <Grid DockPanel.Dock="Top" Height="{StaticResource DisplaySectionHeaderHeight}" Background="{StaticResource DisplaySectionHeaderBackgroundBrush}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!-- Expand/Collapse button and title -->
                            <shell:ShellToolBarButton
                        Grid.Column="0"
                        Style="{StaticResource DisplayToolbarButtonStyle}"
                        Margin="8 0 -8 0"
                        Command="{Binding ExpandCollapseContentCommand, RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="{Binding IsCollapsible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Control>
                                    <Control.Style>
                                        <Style TargetType="Control" BasedOn="{StaticResource ExpandCollapseControlInToolbarButtonStyle}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsContentCollapsed, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                    <Setter Property="RenderTransform">
                                                        <Setter.Value>
                                                            <RotateTransform Angle="-90"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="RenderTransformOrigin" Value="0.5 0.5"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Control.Style>
                                </Control>
                            </shell:ShellToolBarButton>
                            <Button
                        Grid.Column="1"
                        Content="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}"
                        Command="{Binding ExpandCollapseContentCommand, RelativeSource={RelativeSource TemplatedParent}}"
                        IsHitTestVisible="{Binding IsCollapsible, RelativeSource={RelativeSource TemplatedParent}}"
                        IsTabStop="False"
                        Focusable="False"
                        Margin="15 0 0 0">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <TextBlock Text="{TemplateBinding Content}" Style="{StaticResource ExpandCollapseTextStyle}"/>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>

                            <!-- Header Content-->
                            <ContentControl
                        Grid.Column="2"
                        Content="{TemplateBinding HeaderContent}"
                        IsEnabled="{Binding IsContentCollapsed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToNotBooleanConverter}}"/>
                        </Grid>

                        <!-- Display Content -->
                        <ContentControl
                     ClipToBounds="True"
                     Content="{TemplateBinding DisplayContent}"
                     Visibility="{Binding IsContentCollapsed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"/>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Header -->

    <!-- This style used for a control as the content of a MenuButton, in HeaderMenuView for each instrument. We can't use a TargetType=MenuButton style because of the build services limitation on local resources in XAML. -->
    <!-- <Style TargetType="{x:Type Control}" x:Key="InstrumentSettingsIconControlStyle"> -->
    <!-- <Style TargetType="localControls:MenuButton" x:Key="InstrumentSettingsIconControlStyle"> -->
    <Style TargetType="{x:Type Control}" x:Key="InstrumentSettingsIconControlStyle">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Canvas Height="16" Width="16" Focusable="False">
                        <Canvas.Resources>
                            <Style TargetType="{x:Type Rectangle}">
                                <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}, Mode=OneWay}"/>
                                <Setter Property="Width" Value="12"/>
                                <Setter Property="Height" Value="2"/>
                            </Style>
                        </Canvas.Resources>
                        <Rectangle Canvas.Left="2" Canvas.Top="3"/>
                        <Rectangle Canvas.Left="2" Canvas.Top="7"/>
                        <Rectangle Canvas.Left="2" Canvas.Top="11"/>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Image" x:Key="InstrumentSettingsAdornerImageStyle">
        <Setter Property="Width" Value="12"/>
        <Setter Property="Height" Value="12"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <ControlTemplate TargetType="ToggleButton" x:Key="HeaderToggleButtonTemplate">
        <Border
         Name="ButtonBorder"
         BorderThickness="{TemplateBinding BorderThickness}"
         Height="{TemplateBinding Height}"
         Width="{TemplateBinding Width}"
         BorderBrush="{Binding Path=BorderBrush, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
         Background="{Binding Path=Background, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
         TextBlock.TextAlignment="Center"
         TextElement.Foreground="{Binding Path=Foreground, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}">
            <ContentPresenter Focusable="False" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource NITrueWhiteBrush}"/>
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource NIHighlightBrush}"/>
                <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{StaticResource NIHighlightBrush}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource NIHighlightBrush}"/>
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource NIHighlightBrush}"/>
                <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{StaticResource NITrueWhiteBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource NIHighlightBrush}"/>
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource NIHighlightBrush}"/>
                <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{StaticResource NITrueWhiteBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="False"/>
                    <Condition Property="IsMouseCaptured" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource NITrueWhiteBrush}"/>
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource NIHighlightBrush}"/>
                <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{StaticResource NIHighlightBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="ToggleButton" x:Key="HeaderToggleButtonStyle">
        <Setter Property="Template" Value="{StaticResource HeaderToggleButtonTemplate}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource IconGrayBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="{StaticResource ControlHeight}"/>
    </Style>

    <Style TargetType="{x:Type localControls:MenuButton}" x:Key="InstrumentSettingsMenuButtonStyle">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="{StaticResource ControlHeight}"/>
        <Setter Property="Width" Value="{StaticResource ControlHeight}"/>
    </Style>

    <Style TargetType="{x:Type localControls:AdornedControl}" x:Key="InstrumentSettingsAdornedControlStyle">
        <Setter Property="HorizontalAdornerPlacement" Value="Inside"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="AdornerOffsetX" Value="-2"/>
        <Setter Property="AdornerOffsetY" Value="-2"/>
    </Style>

    <Style TargetType="{x:Type Popup}" x:Key="TierTwoPopupStyle">
        <Setter Property="StaysOpen" Value="False"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="PopupAnimation" Value="None"/>
        <Setter Property="Placement" Value="Bottom"/>
        <Setter Property="MaxWidth" Value="{StaticResource SettingsPanelWidth}" />
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="TierTwoPopupBorderStyle">
        <Setter Property="Background" Value="{StaticResource TierTwoContentBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TierTwoBorderBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>

    <!-- cog -->
    <PathGeometry x:Key="InstrumentSettingsIconInnerGeometry">
        M8.57584,6.61694a1.49656,1.49656,0,0,0-1.96.80713,1.49905,1.49905,0,1,0,1.96-.80713Z
    </PathGeometry>
    <PathGeometry x:Key="InstrumentSettingsIconOuterGeometry">
        M11.59885,12.797a6.03628,6.03628,0,0,0,1.187-1.181l1.557.64795,1.152-2.76794-1.559-.64807a5.91416,5.91416,0,0,0,.003-1.67493l1.561-.64294-1.143-2.772-1.561.643a5.924,5.924,0,0,0-1.181-1.186l.648-1.558L9.49686.505l-.649,1.559a5.89925,5.89925,0,0,0-.846-.061,6.01566,6.01566,0,0,0-.828.058L6.52884.5l-2.771,1.143.644,1.561a5.92852,5.92852,0,0,0-1.187,1.181l-1.559-.648L.50388,6.50293l1.559.649a6.02655,6.02655,0,0,0-.003,1.67493L.50015,9.46985V9.4707l1.14172,2.77124,1.561-.64294a6.02779,6.02779,0,0,0,1.181,1.18591l-.648,1.55908,2.768,1.151.64795-1.558a5.84828,5.84828,0,0,0,.843.06006,5.91613,5.91613,0,0,0,.832-.05811l.643,1.561,2.772-1.14209Zm-3.601-1.048a3.74825,3.74825,0,1,1,3.462-2.30811A3.72906,3.72906,0,0,1,7.99783,11.749Z
    </PathGeometry>
    
    <Style TargetType="{x:Type shell:ShellToolBarButton}" x:Key="SettingsButtonStyle" BasedOn="{StaticResource SquareShellToolbarButtonStyle}" x:Shared="False">
        <Setter Property="Margin">
            <Setter.Value>
                <Thickness Left="{StaticResource WideMarginOrPadding}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Content">
            <Setter.Value>
                <Canvas Style="{StaticResource IconCanvasInToolbarButtonStyle}" Height="16" Width="16">
                    <Path Data="{StaticResource InstrumentSettingsIconInnerGeometry}"/>
                    <Path Data="{StaticResource InstrumentSettingsIconOuterGeometry}"/>
                </Canvas>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type shellControls:ShellToggleButton}" x:Key="ViewCogToggleButtonStyle" BasedOn="{StaticResource SquareBorderlessShellToggleButtonStyle}" x:Shared="False">
        <Setter Property="Content">
            <Setter.Value>
                <Canvas Style="{StaticResource IconCanvasInToggleButtonStyle}" Height="16" Width="16">
                        <Path Data="{StaticResource InstrumentSettingsIconInnerGeometry}"/>
                        <Path Data="{StaticResource InstrumentSettingsIconOuterGeometry}"/>
                </Canvas>
            </Setter.Value>
        </Setter>
    </Style>




</ResourceDictionary>
